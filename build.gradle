plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.lucko.me" }

    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

jarJar.enable()

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'

        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    implementation(jarJar("org.jdbi:jdbi3-core:3.45.1")) {
        jarJar.ranged(it, "[3.45.1,)")
    }
    implementation(jarJar("org.jdbi:jdbi3-json:3.45.1")) {
        jarJar.ranged(it, "[3.45.1,)")
    }
    implementation(jarJar("io.leangen.geantyref:geantyref:1.3.13")) {
        jarJar.ranged(it, "[1.3.13,)")
    }
    implementation(jarJar("org.jdbi:jdbi3-jackson2:3.45.1")) {
        jarJar.ranged(it, "[3.45.1,)")
    }
    implementation(jarJar("com.zaxxer:HikariCP:5.1.0")) {
        jarJar.ranged(it, "[5.1.0,)")
    }
    implementation(jarJar("org.postgresql:postgresql:42.6.0")) {
        jarJar.ranged(it, "[42.6.0,)")
    }
    implementation "net.luckperms:api:5.4"
    implementation "curse.maven:votifier-for-neo-1183526:6106111"
   }

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}